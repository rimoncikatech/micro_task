name: CICD

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-northeast-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR for Service A
        id: build-image-service-a
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          REPOSITORY: service-a
        run: |
          cd service-a
          docker buildx create --use
          docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG --push .

      - name: Build, tag, and push image to Amazon ECR for Service B
        id: build-image-service-b
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          REPOSITORY: service-b
        run: |
          cd service-b
          docker buildx create --use
          docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG --push .



      - name:  Check task definition output for Service A
        run: |
          echo "Task definition for Service A: ${{ steps.task-def-service-a.outputs.task-definition }}"
      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: ecs update-service --cluster MicroCluster --service service-a --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-northeast-1"



      - name:  Check task definition output for Service B
        run: |
          echo "Task definition for Service B: ${{ steps.task-def-service-b.outputs.task-definition }}"
      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: ecs update-service --cluster MicroCluster --service service-b --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-northeast-1"

